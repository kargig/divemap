version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: divemap_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: divemap
      MYSQL_USER: ${MYSQL_USER:-divemap_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-divemap_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - divemap_network
    security_opt:
      - no-new-privileges:true
    read_only: false

  # Redis Cache (disabled - not used yet)
  # redis:
  #   image: redis:7-alpine
  #   container_name: divemap_redis
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - divemap_network
  #   security_opt:
  #     - no-new-privileges:true
  #   command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}

  # RabbitMQ (for Celery) (disabled - not used yet)
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: divemap_rabbitmq
  #   restart: always
  #   environment:
  #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-divemap}
  #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-divemap_password}
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
  #   networks:
  #     - divemap_network
  #   security_opt:
  #     - no-new-privileges:true

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: divemap_backend
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - ".env"
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-divemap_user}:${MYSQL_PASSWORD:-divemap_password}@db:3306/divemap
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-foobar}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - db
    networks:
      - divemap_network
    security_opt:
      - no-new-privileges:true
    read_only: false

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: divemap_frontend
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - NODE_ENV=${NODE_ENV:-development}
    depends_on:
      - backend
    networks:
      - divemap_network
    security_opt:
      - no-new-privileges:true

  # Celery Worker (disabled - not used yet)
  # celery_worker:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: divemap_celery_worker
  #   restart: always
  #   command: celery -A app.celery worker --loglevel=info
  #   environment:
  #     - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-divemap_user}:${MYSQL_PASSWORD:-divemap_password}@db:3306/divemap
  #     - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
  #     - RABBITMQ_URL=amqp://${RABBITMQ_USER:-divemap}:${RABBITMQ_PASSWORD:-divemap_password}@rabbitmq:5672/
  #     - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
  #     - ENVIRONMENT=${ENVIRONMENT:-development}
  #   volumes:
  #     - ./backend:/app
  #     - ./uploads:/app/uploads
  #   depends_on:
  #     - db
  #     - redis
  #     - rabbitmq
  #   networks:
  #     - divemap_network
  #   security_opt:
  #     - no-new-privileges:true
  #   read_only: false

volumes:
  mysql_data:

networks:
  divemap_network:
    driver: bridge 
