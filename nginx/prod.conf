events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'fly_client_ip="$http_fly_client_ip"';
    
    # Enhanced logging for debugging
    log_format debug_format '$remote_addr - $remote_user [$time_local] "$request" '
                           '$status $body_bytes_sent "$http_referer" '
                           '"$http_user_agent" "$http_x_forwarded_for" '
                           'rt=$request_time uct="$upstream_connect_time" '
                           'uht="$upstream_header_time" urt="$upstream_response_time" '
                           'pid=$pid worker_pid=$pid fly_client_ip="$http_fly_client_ip"';

    access_log  /dev/stdout main;
    error_log   /dev/stderr warn;
    
    # Enhanced logging for debugging worker process issues
    error_log   /dev/stderr debug;

    # Performance
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # Header size limits - increase to handle large response headers
    client_header_buffer_size 4k;
    client_max_body_size 10m;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Enable serving precompressed files
    gzip_static on;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=15r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=8r/m;

    # Upstream definitions for Fly.io addresses
    upstream frontend {
        server divemap-frontend.flycast:80;
        keepalive 32;
    }
    
    upstream backend {
        server divemap-backend.flycast:80 max_fails=1 fail_timeout=3s;
        keepalive 32;
    }

    # Main HTTP server (Fly.io handles HTTPS termination)
    server {
        listen 8000;
        server_name localhost;

        # Client IP handling from Fly.io proxy
        real_ip_header Fly-Client-IP;
        real_ip_recursive on;
        set_real_ip_from 0.0.0.0/0;
        
        # Header size limits for client requests
        large_client_header_buffers 8 16k;

        # Static assets (content-hashed) - serve directly from Nginx
        location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header X-Content-Type-Options "nosniff" always;
            access_log off;
        }

        # HTML files (short-lived cache)
        location = /index.html {
            root /usr/share/nginx/html;
            add_header Cache-Control "public, max-age=60, stale-while-revalidate=300";
            add_header X-Content-Type-Options "nosniff" always;
        }

        # SPA routing - serve index.html for all other routes
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "public, max-age=60, stale-while-revalidate=300";
            
            # Security headers
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://accounts.google.com https://www.gstatic.com https://static.cloudflareinsights.com https://challenges.cloudflare.com; style-src 'self' 'unsafe-inline' https://accounts.google.com; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https:; frame-src 'self' https://accounts.google.com https://challenges.cloudflare.com; object-src 'none';" always;
        }

        # Backend API routes with rate limiting
        location /api/ {
            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Fly-Client-IP $http_fly_client_ip;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Backend specific settings - increased buffer sizes for large headers
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 16 16k;
            proxy_busy_buffers_size 32k;
            proxy_read_timeout 2s;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            # Fast retry on failure for quick backend detection
            proxy_next_upstream error timeout;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 3s;
        }
        
        # Special handling for dive-sites endpoint that can have large headers
        location ~ ^/api/v1/dive-sites/ {
            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Fly-Client-IP $http_fly_client_ip;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Optimized buffer settings for dive-sites endpoint
            proxy_buffering on;
            proxy_buffer_size 32k;
            proxy_buffers 32 32k;
            proxy_busy_buffers_size 64k;
            proxy_read_timeout 2s;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            # Fast retry on failure for quick backend detection
            proxy_next_upstream error timeout;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 3s;
        }

        # Backend documentation
        location /docs {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Fly-Client-IP $http_fly_client_ip;
            proxy_read_timeout 2s;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            # Fast retry on failure for quick backend detection
            proxy_next_upstream error timeout;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 3s;
        }
        
        location /redoc {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Fly-Client-IP $http_fly_client_ip;
            proxy_read_timeout 2s;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            # Fast retry on failure for quick backend detection
            proxy_next_upstream error timeout;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 3s;
        }
        
        location /openapi.json {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Fly-Client-IP $http_fly_client_ip;
            proxy_read_timeout 2s;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            # Fast retry on failure for quick backend detection
            proxy_next_upstream error timeout;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 3s;
        }

        # Login endpoint with stricter rate limiting
        location /api/v1/auth/login {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Fly-Client-IP $http_fly_client_ip;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_read_timeout 2s;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            # Fast retry on failure for quick backend detection
            proxy_next_upstream error timeout;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 3s;
        }

        # Health check endpoint
        location /nginx-health {
            access_log /dev/stdout debug_format;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            add_header X-Nginx-Status "healthy" always;
            add_header X-Worker-PID $pid always;
        }
        
        # Nginx status endpoint for debugging
        location /nginx-status {
            access_log /dev/stdout debug_format;
            return 200 "nginx_status: running\nworker_pid: $pid\nmaster_pid: $pid\n";
            add_header Content-Type text/plain;
            add_header X-Nginx-Status "running" always;
            add_header X-Worker-PID $pid always;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_read_timeout 2s;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            # Fast retry on failure for quick backend detection
            proxy_next_upstream error timeout;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 3s;
        }
        


        # Security: Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security: Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
