---
description: Testing requirements and standards for backend and frontend development in the Divemap project
globs: ["**/*"]
alwaysApply: true
---

# Testing Standards (Cursor)

These rules summarize `docs/development/testing.md` for quick reference.

## Critical Rules

- **NEVER run tests inside the `divemap_backend` container.** It connects to the live MySQL and teardown will drop tables leading to data loss. DO NOT DO THAT.
- **NEVER use system Python for backend tests.** Use the project venv.
- **ALWAYS follow `docs/development/testing.md` for details.**

## Backend: Quick (Host Venv)

```bash
cd backend
source divemap_venv/bin/activate
export PYTHONPATH="/home/kargig/src/divemap/backend/divemap_venv/lib/python3.11/site-packages:$PYTHONPATH"
# Required to avoid OAuth-related failures
export GOOGLE_CLIENT_ID="dummy-client-id-for-testing"
python -m pytest tests/ -v
```

## Backend: CI-like (Isolated Docker)

```bash
cd backend
./docker-test-github-actions.sh
```

## Frontend Testing

Host (fast iteration):

```bash
cd frontend
npm test
```

Docker dev image (isolated Node):

```bash
cd frontend
docker build -f Dockerfile.dev -t divemap_frontend_dev .
docker run --rm divemap_frontend_dev npm run test:frontend
docker run --rm divemap_frontend_dev npm run test:validation
docker run --rm divemap_frontend_dev npm run test:e2e
```

## DO NOT

- Do not execute `pytest` inside `divemap_backend` (use host venv or CI script).
- Do not run backend tests without activating the venv and setting `PYTHONPATH`.
